weather_routes.security:
  path: '/security.txt'
  defaults:
    _controller: \Drupal\weather_routes\Controller\SecuritytxtController::securitytxtFile
  requirements:
    # Public endpoint
    _access: 'TRUE'
    
weather_routes.point:
  path: '/point/{lat}/{lon}'
  defaults:
    _controller: \Drupal\weather_routes\Controller\LocationAndGridRouteController::serveLocationPage
  requirements:
    # Public endpoint
    _access: 'TRUE'
    # Validate path parameters
    lat: '^-?[0-9]+\.?[0-9]*$'
    lon: '^-?[0-9]+\.?[0-9]*$'

weather_routes.grid:
  path: '/local/{wfo}/{gridX}/{gridY}'
  defaults:
    _controller: \Drupal\weather_routes\Controller\LocationAndGridRouteController::redirectFromGrid
  requirements:
    # Public endpoint
    _access: 'TRUE'
    # Validate path parameters
    wfo: '^[A-Za-z][A-Za-z][A-Za-z]$'
    gridX: '^[0-9]*$'
    gridY: '^[0-9]*$'

weather_routes.html.point.daily:
  path: '/wx/point/{lat}/{lon}/daily'
  defaults:
    _controller: \Drupal\weather_routes\Controller\LocationAndGridRouteController::serveBasicPartial
  requirements:
    # Public endpoint
    _access: 'TRUE'

weather_routes.grid.legacy:
  path: '/local/{wfo}/{gridX}/{gridY}/{location}'
  defaults:
    _controller: \Drupal\weather_routes\Controller\LocationAndGridRouteController::redirectFromGrid
  requirements:
    # Public endpoint
    _access: 'TRUE'
    # Validate path parameters
    wfo: '^[A-Za-z][A-Za-z][A-Za-z]$'
    gridX: '^[0-9]*$'
    gridY: '^[0-9]*$'
